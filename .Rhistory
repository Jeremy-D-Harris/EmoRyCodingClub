facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap)
ggplot(nyc_trunc,aes(price, colour = neighbourhood_group)) +
geom_histogram(binwidth = 10, aes(colour = "white", fill = neighbourhood_group)) +
# geom_jitter(height=0.7, width=0.7) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap)
ggplot(nyc_trunc,aes(price, colour = neighbourhood_group)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group),colour = "white") +
# geom_jitter(height=0.7, width=0.7) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap)
ggplot(nyc_trunc,aes(price, colour = neighbourhood_group)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group),colour = "white") +
# geom_jitter(height=0.7, width=0.7) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, caption = cap)
legend_ttle <- "NYC boroughs"
ggplot(nyc_trunc,aes(price, colour = neighbourhood_group)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
# geom_jitter(height=0.7, width=0.7) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, colour = legend_ttl)
legend_ttl <- "NYC boroughs"
ggplot(nyc_trunc,aes(price, colour = neighbourhood_group)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
# geom_jitter(height=0.7, width=0.7) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, colour = legend_ttl)
ggplot(nyc_trunc,aes(price) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, colour = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, colour = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ttl <- "Properties < US$200 between 5 and 15 nights"
subttl <- "across NYC boroughs"
xlab = "Price (US)"
ylab <- "Number of properties"
cap <- "Source: NYC Airbnb data"
legend_ttl <- "NYC boroughs"
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
facet_wrap(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 10, aes(fill = neighbourhood_group)) +
facet_wrap(. ~ neighbourhood_group, ncol = 1) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 5, aes(fill = neighbourhood_group)) +
facet_wrap(. ~ neighbourhood_group, ncol = 1) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 1, aes(fill = neighbourhood_group)) +
facet_wrap(. ~ neighbourhood_group, ncol = 1) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 100, aes(fill = neighbourhood_group)) +
facet_wrap(. ~ neighbourhood_group, ncol = 1) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 20, aes(fill = neighbourhood_group)) +
facet_wrap(. ~ neighbourhood_group, ncol = 1) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 20, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
legend_ttl <- "Boroughs"
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 20, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
ttl <- "Properties < US$200 between 5 and 15 nights"
subttl <- "across NYC boroughs"
xlab = "Price (US)"
ylab <- "Number of properties"
cap <- "Source: NYC Airbnb data"
legend_ttl <- "Boroughs"
ggplot(nyc_trunc,aes(price)) +
geom_histogram(binwidth = 20, aes(fill = neighbourhood_group)) +
facet_grid(. ~ neighbourhood_group) +
theme_classic() +
labs(title = ttl, subtitle = subttl, x = xlab, y = ylab, caption = cap, fill = legend_ttl)
suppressMessages(require(ggthemes)
require(ggplot2)
suppressMessages(require(ggthemes),
require(ggplot2),
require(readr),
require(dplyr),
)
require(purrr)
map(c(
require(ggthemes),
require(ggplot2),
require(readr),
require(dplyr), suppressMessages() ))
map(c(
require(ggthemes),
require(ggplot2),
require(readr),
require(dplyr)), suppressMessages())
map(c(
require(ggthemes),
require(ggplot2),
require(readr),
require(dplyr)), suppressMessages)
require(pacman)
p_load(purrr,ggthemes,ggplot2,readr,dplyr)
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
update.packages("htmlwidgets")
require(htmlwidgets)
remove.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
require(htmlwidgets)
detach("package:htmlwidgets", unload=TRUE)
detach("package::htmlwidgets", unload=TRUE)
detach("htmlwidgets", unload=TRUE)
?detach
detach(htmlwidgets, unload=TRUE)
detach(package:htmlwidgets, unload=TRUE)
unloadNamespace("htmlwidgets")
remove.packages("plotly")
remove.packages("leaflet")
remove.packages("htmlwidget")
unloadNamespace("htmlwidget")
install.packages("htmlwidget")
require(htmlwidget)
update.packages(htmlwidget)
update.packages("htmlwidget")
require(htmlwidget)
p_load(htmlwidget)
require(pacman)
p_load(htmlwidget)
p_load(ggthemes,ggplot2,readr,dplyr,plotly,leaflet)
require(htmlwidgets)
detach(package:htmlwidgets, character.only = TRUE)
detach("package:htmlwidgets", character.only = TRUE)
unloadNamespace("htmlwidgets")
remove.packages("plotly")
remove.packages("leaflet")
unloadNamespace("htmlwidgets")
p_load(ggthemes,ggplot2,readr,dplyr,plotly,leaflet)
p_load(ggthemes,ggplot2,readr,dplyr,plotly,leaflet)
install.packages("pacman")
install.packages("pacman")
suppressWarnings(require(pacman))
p_load(ggthemes,ggplot2,readr,dplyr,plotly,leaflet)
require(dplyr)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
here()
dir_here()
dr_here()
here::dr_here()
?include_graphics
rmarkdown::render_site
rmarkdown::render_site()
nyc_full <- readr::read_csv(url) # reads in data
nyc_full_ <- nyc_full %>% dplyr::filter(availability_30 > 0)
nyc_full %>% dplyr::filter(availability_30 > 0)
nyc_full %>% filter(availability_30 > 0)
nyc_full_ <- nyc_full %>% filter(availability_30 > 0)
nyc_full %>% names()
url <- "http://data.insideairbnb.com/united-states/ny/new-york-city/2019-06-02/data/listings.csv.gz"
nyc_full <- readr::read_csv(url) # reads in data
nyc_full_ <- nyc_full %>% filter(availability_30 > 0)
nyc_full_ <- nyc_full %>% dplyr::filter(availability_30 > 0)
ggplot() +
geom_bar(data = nyc_full_, mapping = aes(x = availability_30,
fill=neighbourhood_group_cleansed), show.legend = FALSE) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
my_theme
ttl <- "NYC Airbnb availability"
subttl <- "for room types across neighbourhoods"
xlab <- "Availability of property in next 30 days"
ylab <- "Count"
my_theme <- theme_tufte()
ggplot() +
geom_bar(data = nyc_full_, mapping = aes(x = availability_30,
fill=neighbourhood_group_cleansed), show.legend = FALSE) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
my_theme
rmarkdown::render_site()
`r params$date`
folder <- "lookhere"
dr_here()
here::dr_here()
dr_here()
dr_here()
require(here)
dr_here()
here(paste(lookhere,sep="/"),lookheretoo.txt) %>% readlines
folder <- "lookhere"
here(paste(folder,sep="/"),lookheretoo.txt) %>% readlines
here(paste(folder,"lookheretoo",sep="/"),lookheretoo.txt) %>% readlines
paste(folder,"lookheretoo",sep="/")
here(paste(folder,"lookheretoo/",sep="/"),lookheretoo.txt) %>% readlines
paste(folder,"lookheretoo/",sep="/")
here(paste(folder,"lookheretoo/",sep="/"),lookheretoo.txt)
here(paste(folder,"lookheretoo/",sep="/"),"lookheretoo.txt") %>% readlines
folder2 <- "lookheretoo"
folder1 <- "lookhere"
paste(folder1,folder2,sep="/") %>% here("lookheretoo.txt") %>% readlines
?readlines
??readlines
paste(folder1,folder2,sep="/") %>% here("lookheretoo.txt") %>% read_csv
file <- "lookheretoo.txt"
paste(folder1,folder2,sep="/") %>% here(file) %>% read_csv
file <- "lookhere.txt"
paste(folder1,folder2,sep="/") %>% here(file) %>% read_csv
folder1 <- "lookhere"
folder2 <- "lookheretoo"
file <- "lookheretoo.txt"
paste(folder1,folder2,sep="/") %>% here(file) %>% read_csv
here("lookhere","heretest.txt") # using here to forage for the file
here("lookhere","heretest.txt") %>% read_csv # print the contents in R
here("lookhere","heretest.txt") # using here to forage for the file
here("lookhere","heretest.txt") %>% read_csv # print the contents in R
here("lookhere","heretest.txt") %>% read_csv %>% head # print the contents in R
here("lookhere","heretest.txt") %>% read_csv %>% cat() # print the contents in R
here("lookhere","heretest.txt") %>% read_csv %>% class # print the contents in R
here("lookhere","heretest.txt") %>% read_txt %>% class # print the contents in R
here("lookhere","heretest.txt") %>% read_lines %>% class # print the contents in R
here("lookhere","heretest.txt") %>% read_lines # print the contents in R
read_lines(here(paste(folder1,folder2,sep="/",file))) # non-tidy version
folder1 <- "lookhere"
folder2 <- "lookheretoo"
file <- "heretesttoo.txt"
# navigate to the /lookheretoo folder and open the heretesttoo file using 'here'
paste(folder1,folder2,sep="/") %>% here(file) %>% read_lines
read_lines(here(paste(folder1,folder2,sep="/",file))) # non-tidy version
paste(folder1,sep="/") %>% here(file) %>% read_lines
here(file) %>% read_lines
here(folder1,"Newhere")
here(folder1,"newherefromR","newherefromR_sub")
here(folder1,"newherefromR","newherefromR_sub") %>% read_lines
here(folder1,"newherefromR","newherefromR_sub","newherefromR.txt") %>% read_lines
here(folder1,"newherefromR","newherefromR_sub","newherefromR.txt")
getwd()
getwd() %>% paste("lookhere")
getwd() %>% paste0("lookhere")
getwd() %>% paste0("/lookhere")
paste0("/lookhere") %>% getwd()
paste(folder1,sep="/") %>% here(file) %>% read_lines
paste(folder1,sep="/") %>% here(file)
here(folder1,file) %>% read_lines
here(folder1,folder2,file) %>% read_lines
here("lookhere","heretest.txt") # using here to forage for the file
read_lines(here(folder1,folder2,file)) # non-tidy version
here(folder1,folder2,file) %>% read_lines
read_lines(here(folder1,folder2,file)) # non-tidy version
here(file) %>% read_lines
readfunction <- read_lines()
readfunction <- read_lines
readfunction
filetype <- ".csv"
if(filetype==".json")here(folder1,folder2,file) %>% readfunction
filetype <- ".json"
if(filetype==".json")here(folder1,folder2,file) %>% readfunction
rmarkdown::render_site()
tinytex::install_tinytex()
rmarkdown::render_site()
require(tinytex)
rmarkdown::render_site()
set.seed(12)
require(reticulate)
pacman::p_load(dplyr,ggplot2,plotly,DT,htmlwidgets,viridis,reticulate)
rmarkdown::render_site()
require(tinytex)
require(tinytex)
warnings()
names(knitr::knit_engines$get())
rmarkdown::render_site()
require(readr,dplyr)
require(readr,dplyr)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rimg
rmarkdown::render_site()
getRversion()
sessionInfo()
require(tinytex)
update.packages("tinytex")
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "word_document")
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "pdf_document")
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "pdf_document")
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "pdf_document")
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "pdf_document")
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "pdf_document")
packages <- c("pacman","rmarkdown")
install.packages(packages,dependencies = T)
install.packages(packages, dependencies = T)
lapply(packages,require,character.only=T)
rmarkdown::render_site()
rmarkdown::render_site()
install.packages("rmarkdown")
require(rmarkdown)
rmarkdown::render_site()
rmarkdown::render_site()
ttl <- "NYC Airbnb availability"
subttl <- "for room types across neighbourhoods"
xlab <- "Availability of property in next 30 days"
ylab <- "Count"
my_theme <- theme_tufte()
# glimpse(nyc_full)
nyc_full_ <- nyc_full %>% dplyr::filter(availability_30 > 0)
url <- "http://data.insideairbnb.com/united-states/ny/new-york-city/2019-06-02/data/listings.csv.gz"
nyc_full <- readr::read_csv(url) # reads in data
nyc_full_ <- nyc_full %>% dplyr::filter(availability_30 > 0)
ggplot() +
geom_bar(data = nyc_full_, mapping = aes(x = availability_30,
fill=neighbourhood_group_cleansed), show.legend = FALSE) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
my_theme
ggplot() +
geom_bar(data = nyc_full_, mapping = aes(x = availability_30,
fill=neighbourhood_group_cleansed), show.legend = T) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
my_theme
ggplot() +
geom_bar(data = nyc_full_, mapping = aes(x = availability_30,
fill=neighbourhood_group_cleansed), show.legend = F) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
my_theme
rmarkdown::render_site()
rmarkdown::render("Lesson5_rmd.Rmd", output_format = "pdf_document")
ttl <- "NYC Airbnb availability"
subttl <- "for room types across neighbourhoods"
xlab <- "Availability of property in next 30 days"
ylab <- "Count"
my_theme <- theme_tufte()
names(nyc_full)
nyc_full %>% labels
names(nyc_full)
nyc_full_ <- nyc_full %>% dplyr::filter(availability_30 > 0)
nyc_full_ %>% glimpse
ggplot() +
geom_bar(data = nyc_full_,
mapping = aes(x = availability_30,
color=neighbourhood_group_cleansed), show.legend = F) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
my_theme
ggplot() +
geom_bar(data = nyc_full_,
mapping = aes(x = availability_30,
color=neighbourhood_group_cleansed,
fill=neighbourhood_group_cleansed), show.legend = F)
jharr <- theme_tufte()
ggplot() +
geom_bar(data = nyc_full_,
mapping = aes(x = availability_30,
color=neighbourhood_group_cleansed,
fill=neighbourhood_group_cleansed), show.legend = F) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
jharr
require(here) # load the here package if not already
set_here()
dr_here()
require(readr)
list.files() # print files in your current working dir. the 'heretest.txt' file is not here, but one folder below in the new 'lookhere' folder
pwd
df_here
df_here()
require(here)
set_here()
dr_here()
?yaml
??yaml
Sys.Date()
set.seed(12)
N <- 2000
rr <- rnorm(N)
plot(rr,pch=20,main="Some random data")
ttl <- "NYC Airbnb availability"
subttl <- "for room types across neighbourhoods"
xlab <- "Availability of property in next 30 days"
ylab <- "Count"
# append this to your ggplot function with a `+`
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab)
# glimpse(nyc_full)
nyc_full_ <- nyc_full %>% dplyr::filter(availability_30 > 0)
nyc_full_ %>% glimpse
ggplot() +
geom_bar(data = nyc_full_,
mapping = aes(x = availability_30,
color=neighbourhood_group_cleansed,
fill=neighbourhood_group_cleansed), show.legend = F) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
jharr
ggplot() +
geom_bar(data = nyc_full_,
mapping = aes(x = availability_30,
color=neighbourhood_group_cleansed,
fill=neighbourhood_group_cleansed), show.legend = F) +
facet_grid(room_type ~ neighbourhood_group_cleansed) +
labs(title = ttl,
subtitle = subttl,
x = xlab,
y = ylab) +
jharr
?substr_replace
?str_replace
c(c(1,2,3)4  )
c(c(1,2,3)4)
paste(c(1,2,3)4)
c(c(1,2,3),4)
cat(c(1,2,3),4)
esting_function <- function(x, y = 0){
if(y < 0) return(x)
if(is.character(x)) return(y)
return(x * y)
}
testing_function <- function(x, y = 0){
if(y < 0) return(x)
if(is.character(x)) return(y)
return(x * y)
}
testing_function <- function(x, y = 0){
if(y < 0) return(x)
if(is.character(x)) return(y)
return(x * y)
}
testing_function(2,0)
testing_function("2",0)
testing_function(2,-1)
mean(airquality$Ozone, na.rm = TRUE)
mean(airquality$Ozone, na.rm = TRUE)
x <- c(30, 23, 34, 31, 39, 14, 11, 35, 15, 17, 27, 2,
12, 33, 1, 24, 6, 5, 25, 28)
y <- 4
sum(x,y)
sum(x+4,y)
?include_graphics
rmarkdown::render_site()
rmarkdown::render_site()
